apiVersion: apps/v1
kind: Deployment
metadata:
  name: appd-proxy
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: appd-proxy
  template:
    metadata:
      labels:
        app: appd-proxy
    spec:
      containers:
      - name: appd-proxy
        image: msztorc/appd-php-agent-proxy:22.3.0
        env:
          - name: AGENT_PATH
            value: "/opt/appdynamics/php-agent"
          - name: APPDYNAMICS_AGENT_APPLICATION_NAME
            value: "php-k8n-sidecar"
          - name: APPDYNAMICS_AGENT_TIER_NAME
            value: "php-cronjob-tier"
          - name: APPDYNAMICS_AGENT_NODE_NAME
            value: "php-cronjob-node"
          - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
            value: "<APPDYNAMICS-ACCOUNT-NAME>"
          - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
            value: "<APPDYNAMICS-ACCOUNT-KEY>"
          - name: APPDYNAMICS_CONTROLLER_HOST_NAME
            value: "<APPDYNAMICS-CONTROLLER-HOST-NAME>"
          - name: APPDYNAMICS_CONTROLLER_PORT
            value: "443"
          - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
            value: "true"
          - name: AGENT_LOGS_PATH
            value: "/mnt/"
          - name: AGENT_CTRL_PATH
            value: "/mnt/"
        imagePullPolicy: Always
        command: ["/opt/appdynamics/php-agent/appdynamics-php-agent-linux_x64/proxy/runProxy"]
        args: ["/mnt/", "/mnt/"]
        volumeMounts:
        - mountPath: "/mnt"
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: appd-proxy
      affinity:
        podAffinity:
          # Adding soft affinity to avoid race conditions when cronjob already runs and has the volume mounted
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: appd-proxy
              topologyKey: kubernetes.io/hostname
            weight: 100
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: appd-proxy
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: appd-proxy-cron
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      app: appd-proxy
                  topologyKey: "kubernetes.io/hostname"
          restartPolicy: OnFailure
          containers:
          - name: appd-proxy-cron
            image: appd-php-cli
            command: ["php"]
            args: ["/src/cli-job.php"]
            imagePullPolicy: IfNotPresent
            env:
              - name: AGENT_PATH
                value: "/opt/appdynamics/php-agent"
              - name: APPDYNAMICS_AGENT_APPLICATION_NAME
                value: "php-k8n-sidecar"
              - name: APPDYNAMICS_AGENT_TIER_NAME
                value: "php-cronjob-tier"
              - name: APPDYNAMICS_AGENT_NODE_NAME
                value: "php-cronjob-node"
              - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
                value: "<APPDYNAMICS-ACCOUNT-NAME>"
              - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
                value: "<APPDYNAMICS-ACCOUNT-KEY>"
              - name: APPDYNAMICS_CONTROLLER_HOST_NAME
                value: "<APPDYNAMICS-CONTROLLER-HOST-NAME>"
              - name: APPDYNAMICS_CONTROLLER_PORT
                value: "443"
              - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
                value: "true"
              - name: AGENT_LOGS_PATH
                value: "/mnt/"
              - name: AGENT_CTRL_PATH
                value: "/mnt/"
            volumeMounts:
            - mountPath: "/mnt"
              name: data
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: appd-proxy
  schedule: "* * * * *"